// Mocks generated by Mockito 5.4.4 from annotations
// in job/test/features/home/screens/home_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i10;

import 'package:dio/dio.dart' as _i2;
import 'package:either_dart/either.dart' as _i8;
import 'package:flutter/cupertino.dart' as _i7;
import 'package:job/features/home/controllers/home_controller.dart' as _i5;
import 'package:job/features/home/models/job_model.dart' as _i6;
import 'package:job/features/home/repos/home_repo.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepo extends _i1.Mock implements _i3.HomeRepo {
  MockHomeRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response<dynamic>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);

  @override
  _i4.Future<_i2.Response<dynamic>> signup(
    String? name,
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            name,
            email,
            password,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Response<dynamic>>.value(_FakeResponse_0<dynamic>(
          this,
          Invocation.method(
            #signup,
            [
              name,
              email,
              password,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Response<dynamic>>);
}

/// A class which mocks [HomeController].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeController extends _i1.Mock implements _i5.HomeController {
  MockHomeController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set jobModel(_i6.JobModel? _jobModel) => super.noSuchMethod(
        Invocation.setter(
          #jobModel,
          _jobModel,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get currentPage => (super.noSuchMethod(
        Invocation.getter(#currentPage),
        returnValue: 0,
      ) as int);

  @override
  set currentPage(int? _currentPage) => super.noSuchMethod(
        Invocation.setter(
          #currentPage,
          _currentPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get pageLength => (super.noSuchMethod(
        Invocation.getter(#pageLength),
        returnValue: 0,
      ) as int);

  @override
  set pageLength(int? _pageLength) => super.noSuchMethod(
        Invocation.setter(
          #pageLength,
          _pageLength,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  set isLoading(bool? _isLoading) => super.noSuchMethod(
        Invocation.setter(
          #isLoading,
          _isLoading,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  dynamic updateCurrentPage(int? val) => super.noSuchMethod(Invocation.method(
        #updateCurrentPage,
        [val],
      ));

  @override
  dynamic updatePageLength(int? val) => super.noSuchMethod(Invocation.method(
        #updatePageLength,
        [val],
      ));

  @override
  dynamic fetchHomePageData(_i7.BuildContext? context) =>
      super.noSuchMethod(Invocation.method(
        #fetchHomePageData,
        [context],
      ));

  @override
  _i4.Future<_i8.Either<String, bool>> fetchJobData() => (super.noSuchMethod(
        Invocation.method(
          #fetchJobData,
          [],
        ),
        returnValue: _i4.Future<_i8.Either<String, bool>>.value(
            _i9.dummyValue<_i8.Either<String, bool>>(
          this,
          Invocation.method(
            #fetchJobData,
            [],
          ),
        )),
      ) as _i4.Future<_i8.Either<String, bool>>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
